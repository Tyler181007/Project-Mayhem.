import React, { useState } from "react";
import { Link, useLocation } from "react-router-dom";
import { User, LayoutDashboard, ListTodo, ClipboardList, HelpCircle, Settings, Youtube } from "lucide-react";
import { useAuth } from "../context/AuthContext";

export function Sidebar() {
  const [open, setOpen] = useState({ profile: true, dashboard: true, tools: true });
  const { user, logout } = useAuth();
  const location = useLocation();

  const linkClass = (path) =>
    `flex items-center px-4 py-2 rounded transition ${
      location.pathname === path
        ? "bg-gradient-to-r from-gray-800 via-gray-700 to-gray-900 text-white"
        : "hover:bg-gray-800 text-gray-300"
    }`;

  return (
    <aside className="w-64 min-h-screen bg-gradient-to-b from-black via-gray-900 to-gray-800 border-r border-gray-800 hidden md:flex flex-col">
      <div className="flex-1 py-6 space-y-2">
        {/* Profile */}
        <Section
          icon={<User size={18} />}
          title="Profile"
          open={open.profile}
          toggle={() => setOpen((o) => ({ ...o, profile: !o.profile }))}
        >
          <div className="px-4 py-2 text-xs text-gray-400">
            {user?.email || "Not logged in"}
          </div>
          {user && (
            <button
              className="ml-4 mt-2 text-xs text-gray-400 underline hover:text-red-500"
              onClick={logout}
            >
              Logout
            </button>
          )}
        </Section>
        {/* Dashboard */}
        <Section
          icon={<LayoutDashboard size={18} />}
          title="Dashboard"
          open={open.dashboard}
          toggle={() => setOpen((o) => ({ ...o, dashboard: !o.dashboard }))}
        >
          <Link className={linkClass("/")} to="/">Dashboard Home</Link>
          <Link className={linkClass("/trackers")} to="/trackers">Habit Tracker</Link>
        </Section>
        {/* Tools */}
        <Section
          icon={<ListTodo size={18} />}
          title="Tools"
          open={open.tools}
          toggle={() => setOpen((o) => ({ ...o, tools: !o.tools }))}
        >
          <Link className={linkClass("/assignments")} to="/assignments">
            <ClipboardList size={16} className="mr-2" /> Assignments
          </Link>
          <Link className={linkClass("/help")} to="/help">
            <HelpCircle size={16} className="mr-2" /> Help
          </Link>
          <Link className={linkClass("/settings")} to="/settings">
            <Settings size={16} className="mr-2" /> Settings
          </Link>
          <Link className={linkClass("/youtube")} to="/youtube">
            <Youtube size={16} className="mr-2" /> YouTube Widget
          </Link>
        </Section>
      </div>
      <div className="text-xs text-gray-600 p-4">© 2025 Serious Dashboard</div>
    </aside>
  );
}

function Section({ icon, title, open, toggle, children }) {
  return (
    <div>
      <button
        className="w-full flex items-center gap-2 px-4 py-2 font-semibold bg-black/20 hover:bg-gray-900/40 transition"
        onClick={toggle}
      >
        {icon}
        <span>{title}</span>
        <span className="flex-1" />
        <span className="text-xs">{open ? "−" : "+"}</span>
      </button>
      {open && <div className="pl-2 border-l border-gray-800">{children}</div>}
    </div>
  );
}