import React, { useEffect, useState } from "react";
import { PieChart, Pie, Cell, ResponsiveContainer } from "recharts";
import { db } from "../firebase";
import { collection, addDoc, query, where, onSnapshot, orderBy } from "firebase/firestore";
import { useAuth } from "../context/AuthContext";
import { CheckCircle2 } from "lucide-react";
import dayjs from "dayjs";

const COLORS = ["#4ade80", "#38bdf8", "#818cf8", "#fbbf24", "#f87171"];

export function HabitTracker() {
  const { user } = useAuth();
  const [habits, setHabits] = useState([]);
  const [habit, setHabit] = useState("");
  const [log, setLog] = useState("");

  useEffect(() => {
    if (!user) return;
    const q = query(
      collection(db, "habits"),
      where("email", "==", user.email),
      orderBy("createdAt", "desc")
    );
    const unsub = onSnapshot(q, (snap) => {
      setHabits(snap.docs.map((d) => ({ id: d.id, ...d.data() })));
    });
    return () => unsub();
  }, [user]);

  async function addHabit(e) {
    e.preventDefault();
    if (!habit) return;
    await addDoc(collection(db, "habits"), {
      email: user.email,
      name: habit,
      log: log || "",
      createdAt: Date.now()
    });
    setHabit("");
    setLog("");
  }

  // Data for pie chart: count by habit name
  const pieData = Object.entries(
    habits.reduce((acc, h) => {
      acc[h.name] = (acc[h.name] || 0) + 1;
      return acc;
    }, {})
  ).map(([name, value]) => ({ name, value }));

  return (
    <div>
      <form onSubmit={addHabit} className="flex gap-2 mb-4">
        <input
          className="flex-1 bg-gray-800 border border-gray-700 rounded p-2 text-sm text-white"
          placeholder="Habit (e.g., Deep work)"
          value={habit}
          onChange={(e) => setHabit(e.target.value)}
          required
        />
        <input
          className="w-32 bg-gray-800 border border-gray-700 rounded p-2 text-sm text-white"
          placeholder="Log (e.g., 2hr)"
          value={log}
          onChange={(e) => setLog(e.target.value)}
        />
        <button className="bg-green-600 hover:bg-green-700 text-white px-3 rounded font-bold" type="submit">
          Add
        </button>
      </form>
      <div className="flex flex-col md:flex-row gap-4">
        <div className="flex-1 min-w-[140px]">
          {pieData.length ? (
            <ResponsiveContainer width="100%" height={140}>
              <PieChart>
                <Pie
                  data={pieData}
                  cx="50%"
                  cy="50%"
                  labelLine={false}
                  outerRadius={60}
                  fill="#4ade80"
                  dataKey="value"
                  label={({ name }) => name}
                >
                  {pieData.map((entry, idx) => (
                    <Cell key={entry.name} fill={COLORS[idx % COLORS.length]} />
                  ))}
                </Pie>
              </PieChart>
            </ResponsiveContainer>
          ) : (
            <div className="text-xs text-gray-500">Add a habit to begin.</div>
          )}
        </div>
        <div className="flex-1">
          <ul className="space-y-2">
            {habits.slice(0, 7).map((h) => (
              <li
                key={h.id}
                className="flex items-center gap-2 text-sm bg-gray-800/60 rounded px-2 py-1"
              >
                <CheckCircle2 size={14} className="text-green-500" />
                <span className="font-medium">{h.name}</span>
                {h.log && <span className="text-xs text-gray-400">({h.log})</span>}
                <span className="ml-auto text-xs text-gray-500">
                  {dayjs(h.createdAt).format("MMM D")}
                </span>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  );
}